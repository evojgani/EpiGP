Z_new <- Z_share[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1)),]
A <- Z_new[,Trainset]
u_hat[1:(4*(nsnp-index2+1)) + (index2-1)*4*nsnp - 2 * (index2-1) * (index2-2)] <- A %*% Rest_term
}
}
}
} else {
u_hat <- rep(NA, nsnp*(nsnp+1)*9/2)
Z_share = matrix(0L, ncol=nindi, nrow=(nsnp+1)*9)
for(index in 1:ceiling(nsnp/2)){
print(index)
temp0 = matrix(Z[index,]==0, ncol=nindi, nrow=nsnp-index+1, byrow=TRUE)
temp1 = matrix(Z[index,]==1, ncol=nindi, nrow=nsnp-index+1, byrow=TRUE)
temp2 = Z0[index:nsnp,,drop=FALSE]
temp3 = Z2[index:nsnp,,drop=FALSE]
temp4 = Z1[index:nsnp,,drop=FALSE]
Z_share[1:(nsnp-index+1),] <- temp0 * temp2
Z_share[1:(nsnp-index+1) + (nsnp+1),] <- ((!temp0)&(!temp1)) * temp2
Z_share[1:(nsnp-index+1) + 2*(nsnp+1),] <- temp0 * temp3
Z_share[1:(nsnp-index+1) + 3*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp3
Z_share[1:(nsnp-index+1) + 4*(nsnp+1),] <- temp1 * temp3
Z_share[1:(nsnp-index+1) + 5*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp4
Z_share[1:(nsnp-index+1) + 6*(nsnp+1),] <- temp1 * temp2
Z_share[1:(nsnp-index+1) + 7*(nsnp+1),] <- temp0 * temp4
Z_share[1:(nsnp-index+1) + 8*(nsnp+1),] <- temp1 * temp4
if(index <= (nsnp/2)){
temp0 = matrix(Z[(nsnp-index+1),]==0, ncol=nindi, nrow=index, byrow=TRUE)
temp1 = matrix(Z[(nsnp-index+1),]==1, ncol=nindi, nrow=index, byrow=TRUE)
temp2 = Z0[(nsnp-index+1):nsnp,,drop=FALSE]
temp3 = Z2[(nsnp-index+1):nsnp,,drop=FALSE]
temp4 = Z1[(nsnp-index+1):nsnp,,drop=FALSE]
} else{
temp0 = matrix(0L, ncol=nindi, nrow=index, byrow=TRUE)
temp1 = matrix(0L, ncol=nindi, nrow=index, byrow=TRUE)
}
Z_share[(nsnp-index+2):(nsnp+1),] <- temp0 * temp2
Z_share[(nsnp-index+2):(nsnp+1) + (nsnp+1),] <- ((!temp0)&(!temp1)) * temp2
Z_share[(nsnp-index+2):(nsnp+1) + 2*(nsnp+1),] <- temp0 * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 3*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 4*(nsnp+1),] <- temp1 * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 5*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp4
Z_share[(nsnp-index+2):(nsnp+1) + 6*(nsnp+1),] <- temp1 * temp2
Z_share[(nsnp-index+2):(nsnp+1) + 7*(nsnp+1),] <- temp0 * temp4
Z_share[(nsnp-index+2):(nsnp+1) + 8*(nsnp+1),] <- temp1 * temp4
if (requireNamespace("miraculix", quietly = TRUE)) {
Z_new <- Z_share[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1)),]
Z_miraculix <- miraculix::genomicmatrix(Z_new[,Trainset])
u_hat[1:(9*(nsnp-index+1)) + (index-1)*9*nsnp - 2 * (index-1) * (index-2)] <- miraculix::genoVector(Z_miraculix, Rest_term)
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
Z_new <- Z_share[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1)),]
Z_miraculix <- miraculix::genomicmatrix(Z_new[,Trainset])
u_hat[1:(9*(nsnp-index2+1)) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2)] <- miraculix::genoVector(Z_miraculix, Rest_term)
}
} else{
Z_new <- Z_share[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1)),]
A <- Z_new[,Trainset]
u_hat[1:(9*(nsnp-index+1)) + (index-1)*9*nsnp - 2 * (index-1) * (index-2)] <- A %*% Rest_term
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
Z_new <- Z_share[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1)),]
A <- Z_new[,Trainset]
u_hat[1:(9*(nsnp-index2+1)) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2)] <- A %*% Rest_term
}
}
}
}
u_hat <- u_hat  * 1/ 2 / sum(P*(1-P))
sigma_hat <- (u_hat^2)*2*P*(1-P)
out <- list(effect = u_hat, effectvar = sigma_hat)
return(out)
}
estimations <- SNP_effect_var(m, Y, G1, P, cores)
t_hat <- estimations$effect
sigma_hat <- estimations$effectvar
kk <- length(k)
for(i in 1:kk){
print(k[i])
Gtop <- function(m, Estimations, k, cores=1){
Z <- t(m)
nsnp <- nrow(Z)
nindi <- ncol(Z)
G <- matrix(0, ncol=nindi, nrow=nindi)
storage.mode(Z) = "integer"
attr(Z, "dimnames") = NULL
Z0 <- (Z==0)*2L
Z1 <- (Z==1)*2L
Z2 <- (Z==2)*2L
if(sum(Z1==0)== nsnp*nindi){
p_i <- rep(NA, nsnp*(nsnp+1)*2)
include <- integer((nsnp*(nsnp+1)*2))+1L
include[abs(Estimations)< stats::quantile(abs(Estimations),(1-(k/100)))] <- 0L
rm(Estimations)
check = prod(include)
Z_share = matrix(0L, ncol=nindi, nrow=(nsnp+1)*4)
for(index in 1:ceiling(nsnp/2)){
print(index)
temp1 = matrix(Z[index,]==0, ncol=nindi, nrow=nsnp-index+1, byrow=TRUE)
temp2 = Z0[index:nsnp,,drop=FALSE]
temp3 = Z2[index:nsnp,,drop=FALSE]
Z_share[1:(nsnp-index+1),] <- temp1 * temp2
Z_share[1:(nsnp-index+1) + (nsnp+1),] <- (!temp1) * temp2
Z_share[1:(nsnp-index+1) + 2*(nsnp+1),] <- temp1 * temp3
Z_share[1:(nsnp-index+1) + 3*(nsnp+1),] <- (!temp1) * temp3
if(index <= (nsnp/2)){
temp1 = matrix(Z[(nsnp-index+1),]==0, ncol=nindi, nrow=index, byrow=TRUE)
temp2 = Z0[(nsnp-index+1):nsnp,,drop=FALSE]
temp3 = Z2[(nsnp-index+1):nsnp,,drop=FALSE]
} else{
temp1 = matrix(0L, ncol=nindi, nrow=index, byrow=TRUE)
}
Z_share[(nsnp-index+2):(nsnp+1),] <- temp1 * temp2
Z_share[(nsnp-index+2):(nsnp+1) + (nsnp+1),] <- (!temp1) * temp2
Z_share[(nsnp-index+2):(nsnp+1) + 2*(nsnp+1),] <- temp1 * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 3*(nsnp+1),] <- (!temp1) * temp3
if(check!=1){
index2 = nsnp - index + 1
activ = c(1:((nsnp-index+1)) + (index-1)*4*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + (index2-1)*4*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + (nsnp-index+1) + (index-1)*4*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + (nsnp-index2+1) + (index2-1)*4*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + 2*(nsnp-index+1) + (index-1)*4*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + 2*(nsnp-index2+1) +(index2-1)*4*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + 3*(nsnp-index+1) + (index-1)*4*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + 3*(nsnp-index2+1) + (index2-1)*4*nsnp - 2 * (index2-1) * (index2-2))
Z_share <- matrix(include[activ], ncol=nindi, nrow=(nsnp+1)*4, byrow=FALSE) * Z_share
}
if (requireNamespace("miraculix", quietly = TRUE)) {
RandomFieldsUtils::RFoptions(cores=cores)
Z_miraculix <- miraculix::genomicmatrix(Z_share)
pi1 <- miraculix::allele_freq(Z_miraculix)
p_i[1:(4*(nsnp-index+1)) + (index-1)*4*nsnp - 2 * (index-1) * (index-2)] <-
pi1[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1))]
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
p_i[1:(4*(nsnp-index2+1)) + (index2-1)*4*nsnp - 2 * (index2-1) * (index2-2)] <-
pi1[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1))]
}
if(index > (nsnp/2)){
Z_share <- Z_share[-(c((nsnp-index+2):(nsnp+1),
(nsnp-index+2):(nsnp+1) + 1*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 2*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 3*(nsnp+1))),]
Z_miraculix <- miraculix::genomicmatrix(Z_share)
}
G <- G +  miraculix::relationshipMatrix(Z_miraculix, centered=FALSE, normalized=FALSE)
} else{
pi1 <- rowSums(Z_share)/ncol(Z_share)/2
p_i[((index-1)*nsnp*4+1):((index)*nsnp*4)][c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp), 1:(nsnp-index+1)+2*(nsnp), 1:(nsnp-index+1) + 3*(nsnp))] <-
pi1[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1))]
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
p_i[1:(4*(nsnp-index2+1)) + (index2-1)*4*nsnp - 2 * (index2-1) * (index2-2)] <-
pi1[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1))]
}
if(index > (nsnp/2)){
Z_share <- Z_share[-(c((nsnp-index+2):(nsnp+1),
(nsnp-index+2):(nsnp+1) + 1*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 2*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 3*(nsnp+1))),]
}
G <- G + crossprod(Z_share)
}
}
} else {
p_i <- rep(NA, nsnp*(nsnp+1)*9/2)
include <- integer((nsnp*(nsnp+1)*9/2))+1L
include[abs(Estimations)< stats::quantile(abs(Estimations),(1-(k/100)))] <- 0L
rm(Estimations)
check = prod(include)
Z_share = matrix(0L, ncol=nindi, nrow=(nsnp+1)*9)
for(index in 1:ceiling(nsnp/2)){
print(index)
temp0 = matrix(Z[index,]==0, ncol=nindi, nrow=nsnp-index+1, byrow=TRUE)
temp1 = matrix(Z[index,]==1, ncol=nindi, nrow=nsnp-index+1, byrow=TRUE)
temp2 = Z0[index:nsnp,,drop=FALSE]
temp3 = Z2[index:nsnp,,drop=FALSE]
temp4 = Z1[index:nsnp,,drop=FALSE]
Z_share[1:(nsnp-index+1),] <- temp0 * temp2
Z_share[1:(nsnp-index+1) + (nsnp+1),] <- ((!temp0)&(!temp1)) * temp2
Z_share[1:(nsnp-index+1) + 2*(nsnp+1),] <- temp0 * temp3
Z_share[1:(nsnp-index+1) + 3*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp3
Z_share[1:(nsnp-index+1) + 4*(nsnp+1),] <- temp1 * temp3
Z_share[1:(nsnp-index+1) + 5*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp4
Z_share[1:(nsnp-index+1) + 6*(nsnp+1),] <- temp1 * temp2
Z_share[1:(nsnp-index+1) + 7*(nsnp+1),] <- temp0 * temp4
Z_share[1:(nsnp-index+1) + 8*(nsnp+1),] <- temp1 * temp4
if(index <= (nsnp/2)){
temp0 = matrix(Z[(nsnp-index+1),]==0, ncol=nindi, nrow=index, byrow=TRUE)
temp1 = matrix(Z[(nsnp-index+1),]==1, ncol=nindi, nrow=index, byrow=TRUE)
temp2 = Z0[(nsnp-index+1):nsnp,,drop=FALSE]
temp3 = Z2[(nsnp-index+1):nsnp,,drop=FALSE]
temp4 = Z1[(nsnp-index+1):nsnp,,drop=FALSE]
} else{
temp0 = matrix(0L, ncol=nindi, nrow=index, byrow=TRUE)
temp1 = matrix(0L, ncol=nindi, nrow=index, byrow=TRUE)
}
Z_share[(nsnp-index+2):(nsnp+1),] <- temp0 * temp2
Z_share[(nsnp-index+2):(nsnp+1) + (nsnp+1),] <- ((!temp0)&(!temp1)) * temp2
Z_share[(nsnp-index+2):(nsnp+1) + 2*(nsnp+1),] <- temp0 * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 3*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 4*(nsnp+1),] <- temp1 * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 5*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp4
Z_share[(nsnp-index+2):(nsnp+1) + 6*(nsnp+1),] <- temp1 * temp2
Z_share[(nsnp-index+2):(nsnp+1) + 7*(nsnp+1),] <- temp0 * temp4
Z_share[(nsnp-index+2):(nsnp+1) + 8*(nsnp+1),] <- temp1 * temp4
if(check!=1){
index2 = nsnp - index + 1
activ = c(1:((nsnp-index+1)) + (index-1)*9*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + (nsnp-index+1) + (index-1)*9*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + (nsnp-index2+1) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + 2*(nsnp-index+1) + (index-1)*9*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + 2*(nsnp-index2+1) +(index2-1)*9*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + 3*(nsnp-index+1) + (index-1)*9*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + 3*(nsnp-index2+1) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + 4*(nsnp-index+1) + (index-1)*9*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + 4*(nsnp-index2+1) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + 5*(nsnp-index+1) + (index-1)*9*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + 5*(nsnp-index2+1) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + 6*(nsnp-index+1) + (index-1)*9*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + 6*(nsnp-index2+1) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + 7*(nsnp-index+1) + (index-1)*9*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + 7*(nsnp-index2+1) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2),
1:((nsnp-index+1)) + 8*(nsnp-index+1) + (index-1)*9*nsnp - 2 * (index-1) * (index-2),
1:((nsnp-index2+1)) + 8*(nsnp-index2+1) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2))
Z_share <- matrix(include[activ], ncol=nindi, nrow=(nsnp+1)*9, byrow=FALSE) * Z_share
}
if (requireNamespace("miraculix", quietly = TRUE)) {
RandomFieldsUtils::RFoptions(cores=cores)
Z_miraculix <- miraculix::genomicmatrix(Z_share)
pi1 <- miraculix::allele_freq(Z_miraculix)
p_i[1:(9*(nsnp-index+1)) + (index-1)*9*nsnp - 2 * (index-1) * (index-2)] <-
pi1[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1))]
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
p_i[1:(9*(nsnp-index2+1)) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2)] <-
pi1[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1))]
}
if(index > (nsnp/2)){
Z_share <- Z_share[-(c((nsnp-index+2):(nsnp+1),
(nsnp-index+2):(nsnp+1) + 1*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 2*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 3*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 4*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 5*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 6*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 7*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 8*(nsnp+1))),]
Z_miraculix <- miraculix::genomicmatrix(Z_share)
}
G <- G +  miraculix::relationshipMatrix(Z_miraculix, centered=FALSE, normalized=FALSE)
} else{
pi1 <- rowSums(Z_share)/ncol(Z_share)/2
p_i[1:(9*(nsnp-index+1)) + (index-1)*9*nsnp - 2 * (index-1) * (index-2)] <-
pi1[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1))]
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
p_i[1:(9*(nsnp-index2+1)) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2)] <-
pi1[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1))]
}
if(index > (nsnp/2)){
Z_share <- Z_share[-(c((nsnp-index+2):(nsnp+1),
(nsnp-index+2):(nsnp+1) + 1*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 2*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 3*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 4*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 5*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 6*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 7*(nsnp+1),
(nsnp-index+2):(nsnp+1) + 8*(nsnp+1))),]
}
G <- G + crossprod(Z_share)
}
}
}
p_i <- p_i[stats::complete.cases(p_i)]
G_k <- G / (2 * sum(p_i*(1-p_i)))
return(G_k)
}
G2 <- Gtop(m, t_hat, k[i], cores)
G3 <- Gtop(m, sigma_hat, k[i], cores)
sERRBLUP <- function(Pheno, Gtop) {
Y <- data.frame(ID = 1:length(Pheno), observation = Pheno)
phenosid <- Y[stats::complete.cases(Y[,2]),]
Trainset <- phenosid[,1]
n <- dim(Gtop)[1]
Zz <- diag(n)
Xx <- matrix(1,n,ncol=1)
y <- phenosid[,2]
ntrain <- length(y)
X <- Xx[Trainset]
Z <- Zz[Trainset,]
Ginv <- MASS::ginv(Gtop)
Gtrain <- Gtop[Trainset,Trainset]
abc <- EMMREML::emmreml(y=y, X=cbind(matrix(1, nrow = ntrain, ncol=1)), Z=diag(ntrain), K=Gtrain)
vare <- abc$Ve
varg <- abc$Vu
lambda <- vare/varg
if(lambda<0.001){
lambda = 0.001
}
if(lambda>1000){
lambda = 1000
}
LHS <- rbind(cbind(crossprod(X),crossprod(X,Z)),cbind(crossprod(Z,X),crossprod(Z)+Ginv*lambda))
RHS <- rbind(crossprod(X,y),crossprod(Z,y))
MME <- MASS::ginv(LHS)%*%RHS
prediction <- MME[-1,]+MME[1,1]
return(prediction)
}
prediction_effect <- sERRBLUP(Y , G2)
prediction_var <- sERRBLUP(Y , G3)
cor.effect <- stats::cor(y[val],prediction_effect[which(val)])
cor.var <- stats::cor(y[val],prediction_var[which(val)])
cat(cor.effect,'\n')
cat(cor.var,'\n')
Predictive_ability[i,] <- c(k[i], cor.effect, cor.var)
}
return(Predictive_ability)
}
cross_val <- sERRBLUP_crossval(M, Phenotype,k, cores=15)
cross_val
library(BGLR)
data(wheat)
N <- length(Phenotype)
n <- 60
test <- sample(1:N,n)
Phenotype[test] <- NA
m <- Recodemarkers(wheat.X[,1:10])
G_ERRBLUP <- Gall(m, cores=15)
G <- G_ERRBLUP$G
P <- G_ERRBLUP$P
Estimation <- SNP_effect_var(m, Phenotype, G, P, cores=15)
t_hat <- Estimation$Effect
sigma_hat <- Estimation$Effect.Var
t_hat
str(Estimation)
SNP_effect_var <- function(m, Pheno, G_ERRBLUP, P, cores=1){
Y <- data.frame(ID = 1:length(Pheno), observation = Pheno)
phenosid <- Y[stats::complete.cases(Y[,2]),]
y <- phenosid[, 2]
ntrain <- length(y)
Trainset <- phenosid[,1]
Gall_train <- G_ERRBLUP[Trainset, Trainset]
R <- diag(ntrain)
multi <- y - mean(y)
abc <- EMMREML::emmreml(y, X=cbind(matrix(rep(1, ntrain), ncol=1)), Z=diag(ntrain), K=Gall_train)
vare <- abc$Ve
varg <- abc$Vu
lambda <- vare/varg
if(lambda<0.001){
lambda = 0.001
}
if(lambda>1000){
lambda = 1000
}
Rest_term <- (chol2inv(chol(Gall_train + R*lambda)) %*% multi)
Z <- t(m)
nsnp <- nrow(Z)
nindi <- ncol(Z)
Z0 <- (Z==0)*2L
Z1 <- (Z==1)*2L
Z2 <- (Z==2)*2L
if(sum(Z1==0)== nsnp*nindi){
u_hat <- rep(0L, nsnp*(nsnp+1)*2)
Z_share = matrix(0L, ncol=nindi, nrow=(nsnp+1)*4)
for(index in 1:ceiling(nsnp/2)){
print(index)
temp1 = matrix(Z[index,]==0, ncol=nindi, nrow=nsnp-index+1, byrow=TRUE)
temp2 = Z0[index:nsnp,,drop=FALSE]
temp3 = Z2[index:nsnp,,drop=FALSE]
Z_share[1:(nsnp-index+1),] <- temp1 * temp2
Z_share[1:(nsnp-index+1) + (nsnp+1),] <- (!temp1) * temp2
Z_share[1:(nsnp-index+1) + 2*(nsnp+1),] <- temp1 * temp3
Z_share[1:(nsnp-index+1) + 3*(nsnp+1),] <- (!temp1) * temp3
if(index <= (nsnp/2)){
temp1 = matrix(Z[(nsnp-index+1),]==0, ncol=nindi, nrow=index, byrow=TRUE)
temp2 = Z0[(nsnp-index+1):nsnp,,drop=FALSE]
temp3 = Z2[(nsnp-index+1):nsnp,,drop=FALSE]
} else{
temp1 = matrix(0L, ncol=nindi, nrow=index, byrow=TRUE)
}
Z_share[(nsnp-index+2):(nsnp+1),] <- temp1 * temp2
Z_share[(nsnp-index+2):(nsnp+1) + (nsnp+1),] <- (!temp1) * temp2
Z_share[(nsnp-index+2):(nsnp+1) + 2*(nsnp+1),] <- temp1 * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 3*(nsnp+1),] <- (!temp1) * temp3
if (requireNamespace("miraculix", quietly = TRUE)) {
RandomFieldsUtils::RFoptions(cores=cores)
Z_new <- Z_share[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1)),]
Z_miraculix <- miraculix::genomicmatrix(Z_new[,Trainset])
u_hat[1:(4*(nsnp-index+1)) + (index-1)*4*nsnp - 2 * (index-1) * (index-2)] <- miraculix::genoVector(Z_miraculix, Rest_term)
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
Z_new <- Z_share[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1)),]
Z_miraculix <- miraculix::genomicmatrix(Z_new[,Trainset])
u_hat[1:(4*(nsnp-index2+1)) + (index2-1)*4*nsnp - 2 * (index2-1) * (index2-2)] <- miraculix::genoVector(Z_miraculix, Rest_term)
}
} else{
Z_new <- Z_share[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1)),]
A <- Z_new[,Trainset]
u_hat[1:(4*(nsnp-index+1)) + (index-1)*4*nsnp - 2 * (index-1) * (index-2)] <- A %*% Rest_term
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
Z_new <- Z_share[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1)),]
A <- Z_new[,Trainset]
u_hat[1:(4*(nsnp-index2+1)) + (index2-1)*4*nsnp - 2 * (index2-1) * (index2-2)] <- A %*% Rest_term
}
}
}
} else {
u_hat <- rep(NA, nsnp*(nsnp+1)*9/2)
Z_share = matrix(0L, ncol=nindi, nrow=(nsnp+1)*9)
for(index in 1:ceiling(nsnp/2)){
print(index)
temp0 = matrix(Z[index,]==0, ncol=nindi, nrow=nsnp-index+1, byrow=TRUE)
temp1 = matrix(Z[index,]==1, ncol=nindi, nrow=nsnp-index+1, byrow=TRUE)
temp2 = Z0[index:nsnp,,drop=FALSE]
temp3 = Z2[index:nsnp,,drop=FALSE]
temp4 = Z1[index:nsnp,,drop=FALSE]
Z_share[1:(nsnp-index+1),] <- temp0 * temp2
Z_share[1:(nsnp-index+1) + (nsnp+1),] <- ((!temp0)&(!temp1)) * temp2
Z_share[1:(nsnp-index+1) + 2*(nsnp+1),] <- temp0 * temp3
Z_share[1:(nsnp-index+1) + 3*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp3
Z_share[1:(nsnp-index+1) + 4*(nsnp+1),] <- temp1 * temp3
Z_share[1:(nsnp-index+1) + 5*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp4
Z_share[1:(nsnp-index+1) + 6*(nsnp+1),] <- temp1 * temp2
Z_share[1:(nsnp-index+1) + 7*(nsnp+1),] <- temp0 * temp4
Z_share[1:(nsnp-index+1) + 8*(nsnp+1),] <- temp1 * temp4
if(index <= (nsnp/2)){
temp0 = matrix(Z[(nsnp-index+1),]==0, ncol=nindi, nrow=index, byrow=TRUE)
temp1 = matrix(Z[(nsnp-index+1),]==1, ncol=nindi, nrow=index, byrow=TRUE)
temp2 = Z0[(nsnp-index+1):nsnp,,drop=FALSE]
temp3 = Z2[(nsnp-index+1):nsnp,,drop=FALSE]
temp4 = Z1[(nsnp-index+1):nsnp,,drop=FALSE]
} else{
temp0 = matrix(0L, ncol=nindi, nrow=index, byrow=TRUE)
temp1 = matrix(0L, ncol=nindi, nrow=index, byrow=TRUE)
}
Z_share[(nsnp-index+2):(nsnp+1),] <- temp0 * temp2
Z_share[(nsnp-index+2):(nsnp+1) + (nsnp+1),] <- ((!temp0)&(!temp1)) * temp2
Z_share[(nsnp-index+2):(nsnp+1) + 2*(nsnp+1),] <- temp0 * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 3*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 4*(nsnp+1),] <- temp1 * temp3
Z_share[(nsnp-index+2):(nsnp+1) + 5*(nsnp+1),] <- ((!temp0)&(!temp1)) * temp4
Z_share[(nsnp-index+2):(nsnp+1) + 6*(nsnp+1),] <- temp1 * temp2
Z_share[(nsnp-index+2):(nsnp+1) + 7*(nsnp+1),] <- temp0 * temp4
Z_share[(nsnp-index+2):(nsnp+1) + 8*(nsnp+1),] <- temp1 * temp4
if (requireNamespace("miraculix", quietly = TRUE)) {
Z_new <- Z_share[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1)),]
Z_miraculix <- miraculix::genomicmatrix(Z_new[,Trainset])
u_hat[1:(9*(nsnp-index+1)) + (index-1)*9*nsnp - 2 * (index-1) * (index-2)] <- miraculix::genoVector(Z_miraculix, Rest_term)
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
Z_new <- Z_share[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1)),]
Z_miraculix <- miraculix::genomicmatrix(Z_new[,Trainset])
u_hat[1:(9*(nsnp-index2+1)) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2)] <- miraculix::genoVector(Z_miraculix, Rest_term)
}
} else{
Z_new <- Z_share[c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1)),]
A <- Z_new[,Trainset]
u_hat[1:(9*(nsnp-index+1)) + (index-1)*9*nsnp - 2 * (index-1) * (index-2)] <- A %*% Rest_term
if(index<= (nsnp/2)){
index2 = nsnp - index + 1
Z_new <- Z_share[-c(1:(nsnp-index+1), 1:(nsnp-index+1)+(nsnp+1), 1:(nsnp-index+1)+2*(nsnp+1), 1:(nsnp-index+1) + 3*(nsnp+1),
1:(nsnp-index+1) + 4*(nsnp+1), 1:(nsnp-index+1) + 5*(nsnp+1), 1:(nsnp-index+1) + 6*(nsnp+1),
1:(nsnp-index+1) + 7*(nsnp+1), 1:(nsnp-index+1) + 8*(nsnp+1)),]
A <- Z_new[,Trainset]
u_hat[1:(9*(nsnp-index2+1)) + (index2-1)*9*nsnp - 2 * (index2-1) * (index2-2)] <- A %*% Rest_term
}
}
}
}
u_hat <- u_hat  * 1/ 2 / sum(P*(1-P))
sigma_hat <- (u_hat^2)*2*P*(1-P)
out <- list(Effect = u_hat, Effect.Var = sigma_hat)
return(out)
}
Estimation <- SNP_effect_var(m, Phenotype, G, P, cores=15)
t_hat <- Estimation$Effect
t_hat
?sERRBLUP_Proportions_Test
?sERRBLUP_Proportions_Test
?sERRBLUP_Proportions_Test
?sERRBLUP_Proportions_Test
?sERRBLUP_Proportions_Test
?sERRBLUP
?sER
?sERRBLUP
?BGLR
